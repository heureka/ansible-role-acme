---
- name: Prepare directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ acme_paths['install_path'] }}"
    - "{{ acme_paths['cert_path'] }}"
    - "{{ acme_paths['download_path'] }}"

- name: Install prerequisites
  package:
    name: "{{ acme_prerequisite_packages }}"
    state: present

- name: Clone acme.sh
  git:
    dest: "{{ acme_paths['download_path'] }}"
    repo: https://github.com/acmesh-official/acme.sh
    version: "3.0.4"
    update: true
    force: true

- name: Check if the acme.sh directory is present
  stat:
    path: "{{ acme_paths['install_path'] }}/acme.sh"
  register: acme_install_path

- name: Install acme.sh
  command: ./acme.sh --install --nocron --home "{{ acme_paths['install_path'] }}" --certhome "{{ acme_paths['cert_path'] }}" --accountemail "{{ acme_account_email }}" chdir="{{ acme_paths['download_path'] }}"
  when: not acme_install_path.stat.exists

- name: Upgrade acme.sh
  command: ./acme.sh --upgrade --nocron --home "{{ acme_paths['install_path'] }}" --certhome "{{ acme_paths['cert_path'] }}" --accountemail "{{ acme_account_email }}" chdir="{{ acme_paths['download_path'] }}"
  changed_when: false
  when: acme_install_path.stat.exists

- name: Create gcloud cron job
  cron:
    name: Acme.sh gcloud certificate renew
    minute: '0'
    hour: '2'
    user: root
    job: "CLOUDSDK_CORE_PROJECT={{ item.project }} {{ acme_paths['install_path'] }}/acme.sh --renew --domain {{ item.domain }} --home {{ acme_paths['install_path'] }} &>> {{ acme_paths['log_file'] }}"
  with_items:
    - "{{ acme_domains }}"
  when:
    - acme_install_path.stat.exists
    - item.provider == 'dns_gcloud'

- name: Create other cron job
  cron:
    name: Acme.sh certificate renew
    minute: '0'
    hour: '2'
    user: root
    job: "{{ acme_paths['install_path'] }}/acme.sh --renew --domain {{ item.domain }} --home {{ acme_paths['install_path'] }} &>> {{ acme_paths['log_file'] }}"
  with_items:
    - "{{ acme_domains }}"
  when:
    - acme_install_path.stat.exists
    - item.provider != 'dns_gcloud'

- name: Copy custom dnsapi scripts to the install_path
  copy:
    src: files/dnsapi_custom/
    dest: "{{ acme_paths['install_path'] }}/dnsapi/"
